{"version":3,"sources":["contexts/ToDoList/index.tsx","components/Button/index.tsx","components/Input/index.tsx","components/ToDoItem/index.tsx","components/InputContainer/index.tsx","components/ToDoList/index.tsx","components/PageHeader/index.tsx","pages/List/index.tsx","pages/Add/index.tsx","pages/Detail/index.tsx","pages/NotFound/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ToDoListContext","createContext","toDoList","addToDo","deleteToDo","ToDoListProvider","children","useState","setToDoList","useEffect","list","localStorage","getItem","JSON","parse","Provider","value","toDo","newList","setItem","stringify","index","splice","Button","label","backgroundColor","hoverColor","onClick","Container","Label","styled","div","props","Input","placeholder","onChange","onAdd","InputBox","event","target","onKeyPress","input","ToDoItem","id","onDelete","to","Link","InputContainer","setToDo","useContext","handleAdd","ToDoList","map","item","PageHeader","pathname","useLocation","title","startsWith","Title","GoBack","List","AddButton","Add","replace","useHistory","Detail","goBack","params","useParams","Number","parseInt","ToDo","NotFound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87b3bb18.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\n\r\ninterface Context {\r\n  readonly toDoList: string[];\r\n  readonly addToDo: (toDo: string) => void;\r\n  readonly deleteToDo: (index: number) => void;\r\n}\r\n\r\nconst ToDoListContext = createContext<Context>({\r\n  toDoList: [],\r\n  addToDo: (): void => {},\r\n  deleteToDo: (): void => {},\r\n});\r\n\r\ninterface Props {\r\n  children: JSX.Element | JSX.Element[];\r\n}\r\n\r\nconst ToDoListProvider = ({ children }: Props): JSX.Element => {\r\n  const [toDoList, setToDoList] = useState<string[]>([]);\r\n\r\n  const addToDo = (toDo: string): void => {\r\n    if (toDo) {\r\n      const newList = [...toDoList, toDo];\r\n      localStorage.setItem('ToDoList', JSON.stringify(newList));\r\n      setToDoList(newList);\r\n    }\r\n  };\r\n\r\n  const deleteToDo = (index: number): void => {\r\n    let list = [...toDoList];\r\n    list.splice(index, 1);\r\n    localStorage.setItem('ToDoList', JSON.stringify(list));\r\n    setToDoList(list);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const list = localStorage.getItem('ToDoList');\r\n    if (list) {\r\n      setToDoList(JSON.parse(list));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ToDoListContext.Provider\r\n      value={{\r\n        toDoList,\r\n        addToDo,\r\n        deleteToDo,\r\n      }}\r\n    >\r\n      {children}\r\n    </ToDoListContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ToDoListContext, ToDoListProvider };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n  readonly label: string;\r\n  readonly backgroundColor?: string;\r\n  readonly hoverColor?: string;\r\n  readonly onClick?: () => void;\r\n}\r\n\r\nexport const Button = ({\r\n  label,\r\n  backgroundColor = '#AACD6E',\r\n  hoverColor = '#BCE55C',\r\n  onClick,\r\n}: Props) => {\r\n  return (\r\n    <Container backgroundColor={backgroundColor} hoverColor={hoverColor} onClick={onClick}>\r\n      <Label>{label}</Label>\r\n    </Container>\r\n  );\r\n};\r\n\r\ninterface ContainerProps {\r\n  readonly backgroundColor: string;\r\n  readonly hoverColor: string;\r\n}\r\n\r\nconst Container = styled.div<ContainerProps>`\r\n  text-align: center;\r\n  background-color: ${(props) => props.backgroundColor};\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${(props) => props.hoverColor};\r\n  }\r\n  &:active {\r\n    box-shadow: inset 5px 5px 10px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: #fff;\r\n  font-size: 16px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n  readonly placeholder?: string;\r\n  readonly value?: string;\r\n  readonly onChange?: (text: string) => void;\r\n  readonly onAdd?: () => void;\r\n}\r\n\r\nexport const Input = ({ placeholder, value, onChange, onAdd }: Props) => {\r\n  return (\r\n    <InputBox\r\n      value={value}\r\n      placeholder={placeholder}\r\n      onChange={(event) => {\r\n        if (typeof onChange === 'function') {\r\n          onChange(event.target.value);\r\n        }\r\n      }}\r\n      onKeyPress={onAdd}\r\n    />\r\n  );\r\n};\r\n\r\nconst InputBox = styled.input`\r\n  flex: 1;\r\n  font-size: 16px;\r\n  padding: 10px;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button } from 'components';\r\n\r\ninterface Props {\r\n  readonly id: number;\r\n  readonly label: string;\r\n  readonly onDelete?: () => void;\r\n}\r\n\r\nexport const ToDoItem = ({ id, label, onDelete }: Props) => {\r\n  return (\r\n    <Container>\r\n      <Label to={`/detail/${id}`}>{label}</Label>\r\n      <Button label=\"삭제\" backgroundColor=\"#F16B6F\" hoverColor=\"#E71D36\" onClick={onDelete} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #bdbdbd;\r\n  margin: 10px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Label = styled(Link)`\r\n  flex: 1;\r\n  font-size: 16px;\r\n  margin-right: 20px;\r\n  text-decoration: none;\r\n`;\r\n","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'components/Button';\r\nimport { Input } from 'components/Input';\r\nimport { ToDoListContext } from 'contexts';\r\n\r\ninterface Props {\r\n  readonly onAdd?: () => void;\r\n}\r\n\r\nexport const InputContainer = ({ onAdd }: Props) => {\r\n  const [toDo, setToDo] = useState('');\r\n  const { addToDo } = useContext(ToDoListContext);\r\n\r\n  const handleAdd = () => {\r\n    addToDo(toDo);\r\n    setToDo('');\r\n    if (toDo && typeof onAdd === 'function') {\r\n      onAdd();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Input\r\n        placeholder=\"할 일을 입력해 주세요.\"\r\n        value={toDo}\r\n        onChange={setToDo}\r\n        onAdd={handleAdd}\r\n      />\r\n      <Button label=\"추가\" onClick={handleAdd} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { ToDoItem } from 'components/ToDoItem';\r\nimport { ToDoListContext } from 'contexts';\r\n\r\nexport const ToDoList = () => {\r\n  const { toDoList, deleteToDo } = useContext(ToDoListContext);\r\n\r\n  return (\r\n    <Container data-testid=\"toDoList\">\r\n      {toDoList?.map((item, index) => (\r\n        <ToDoItem key={item} id={index} label={item} onDelete={() => deleteToDo(index)} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  min-width: 350px;\r\n  height: 400px;\r\n  overflow-y: scroll;\r\n  border: 1px solid #bdbdbd;\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nexport const PageHeader = () => {\r\n  const { pathname } = useLocation();\r\n  let title = '에러';\r\n\r\n  if (pathname === '/') {\r\n    title = '할 일 목록';\r\n  } else if (pathname === '/add') {\r\n    title = '할 일 추가';\r\n  } else if (pathname.startsWith('/detail')) {\r\n    title = '할 일 상세';\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      {pathname !== '/' && <GoBack to=\"/\">돌아가기</GoBack>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #aacd6e;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  padding: 20px;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\nconst GoBack = styled(Link)`\r\n  padding: 10px;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  position: absolute;\r\n  left: 20px;\r\n  border: 1px solid #fff;\r\n  border-radius: 8px;\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ToDoList } from 'components';\r\n\r\nexport const List = () => {\r\n  return (\r\n    <Container>\r\n      <ToDoList />\r\n      <AddButton to=\"/add\">+</AddButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n`;\r\n\r\nconst AddButton = styled(Link)`\r\n  font-size: 20px;\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n  border-radius: 30px;\r\n  position: absolute;\r\n  bottom: -30px;\r\n  background-color: #aacd6e;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    background-color: #bce55c;\r\n  }\r\n  &:active {\r\n    box-shadow: inset 5px 5px 10px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { InputContainer } from 'components';\r\n\r\nexport const Add = () => {\r\n  const { replace } = useHistory();\r\n\r\n  return (\r\n    <Container>\r\n      <InputContainer onAdd={() => replace('/')} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'components';\r\nimport { ToDoListContext } from 'contexts';\r\n\r\nexport const Detail = () => {\r\n  const { goBack } = useHistory();\r\n  const params: { id: string } = useParams();\r\n  const id = Number.parseInt(params.id);\r\n  const { toDoList, deleteToDo } = useContext(ToDoListContext);\r\n  const toDo = toDoList[id];\r\n\r\n  return (\r\n    <Container>\r\n      <ToDo>{toDo}</ToDo>\r\n      <Button\r\n        label=\"삭제\"\r\n        backgroundColor=\"#F16B6F\"\r\n        hoverColor=\"#E71D36\"\r\n        onClick={() => {\r\n          deleteToDo(id);\r\n          goBack();\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n`;\r\n\r\nconst ToDo = styled.div`\r\n  min-width: 350px;\r\n  height: 350px;\r\n  overflow-y: auto;\r\n  border: 1px solid #bdbdbd;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const NotFound = () => {\r\n  return <Container>Not Found</Container>;\r\n};\r\n\r\nconst Container = styled.div`\r\n  font-size: 20px;\r\n`;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { ToDoListProvider } from 'contexts';\nimport { Add, Detail, List, NotFound } from 'pages';\nimport { PageHeader } from 'components';\n\nfunction App() {\n  return (\n    <ToDoListProvider>\n      <Container>\n        <PageHeader />\n        <Switch>\n          <Route exact path=\"/\" component={List} />\n          <Route exact path=\"/add\" component={Add} />\n          <Route exact path=\"/detail/:id\" component={Detail} />\n          <Route component={NotFound}></Route>\n        </Switch>\n      </Container>\n    </ToDoListProvider>\n  );\n}\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}